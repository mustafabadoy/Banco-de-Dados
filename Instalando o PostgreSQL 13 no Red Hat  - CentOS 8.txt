Install PostgreSQL 13 on CentOS 8 | RHEL 8

sudo yum -y update (Atualizando o yum)
sudo systemctl reboot (Reiniciando o Servidor)

Step 1: Add PostgreSQL Yum Repository

sudo dnf install https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm

Step 2: Install PostgreSQL 13 on CentOS 8 | RHEL 8

sudo dnf -qy module disable postgresql

sudo dnf -y install dnf-utils
sudo yum-config-manager --enable pgdg13-updates-testing

sudo yum search postgresql13

sudo dnf install postgresql13-server

Step 3: Initialize and start database service

sudo /usr/pgsql-13/bin/postgresql-13-setup initdb

ls  /var/lib/pgsql/13/data/

sudo systemctl enable --now postgresql-13

systemctl status postgresql-13

Step 4: Set PostgreSQL admin user’s password

sudo su - postgres 

]$ psql -c "alter user postgres with password 'StrongDBPassword'"
ALTER ROLE

exit = sai do prompt do psql

Step 5: Enabling remote Database connections (Optional)

sudo vi /var/lib/pgsql/13/data/postgresql.conf
# line 59
listen_addresses = '*'

sudo vi /var/lib/pgsql/13/data/pg_hba.conf

# Accept from anywhere (not recommended)
host all all 0.0.0.0/0 md5

# Accept from trusted subnet (Recommended setting)
host all all 127.0.0.1/32   scran-sha-256
host all all 192.168.0.0/24 md5

sudo systemctl restart postgresql-13

Testando

    # psql -h localhost -U postgres -d postgres

    Senha para usuário postgres: (senha do usuario postgres)

    postgres=#    






























3 - Instalar o PostgreSQL:

    # yum install postgresql-server 

4 - Verificando pacotes instalados:

    # rpm -qa | grep postgres

5 - Criando um novo cluster de banco de dados PostgreSQL:

    # postgresql-setup --initdb

7 - Iniciando o serviço no boot:

    # systemctl enable postgresql.service 

6 - Subindo o serviço:

    # systemctl start postgresql.service

8 - Verificando o status do serviço:

    # systemctl status postgresql.service

9 - Reiniciando o serviço:

    # systemctl restart postgresql.service


10 - Setar senha no usuário postgres:

    # sudo -u postgres psql

    postgres=# alter user postgres with encrypted password 'teste';

11 - Sair do prompt do psql:

    postgres=# \q


12 - Alterar

     # vi /var/lib/pgsql/9.3/data/postgresql.conf

#listen_addresses = ‘localhost’ # what IP address(es) to listen on

     para

listen_addresses = ‘*‘ # what IP address(es) to listen on


habilitar a encriptação de passwords, para fazer isso descomente a linha abaixo removendo o "#", ficando a linha assim:

password_encryption = on 


13 - Alterar    

    # vi /var/lib/pgsql/9.3/data/pg_hba.conf

# IPv4 local connections:
host    all             all             127.0.0.1/32            ident
# IPv6 local connections:
host    all             all             ::1/128                 ident

     para 

# IPv4 local connections:
host    all             all             127.0.0.1/32            md5
host    all             all             192.168.0.0/24          md5
# IPv6 local connections:
host    all             all             ::1/128                 md5



14 - Testando

    # psql -h localhost -U postgres -d postgres

    Senha para usuário postgres: (senha do usuario postgres)

    postgres=#    